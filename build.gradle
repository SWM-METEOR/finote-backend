plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.diffplug.spotless' version '6.19.0'
	id 'pmd'
}

group = 'kr.co.finote'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

pmd {
	toolVersion = "6.55.0"
	rulesMinimumPriority = 5
	ruleSetFiles = files("config/pmd/pmd.xml")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	runtimeOnly 'org.postgresql:postgresql'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// logback slack
	implementation 'com.github.maricn:logback-slack-appender:1.6.1'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// elasticsearch
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'co.elastic.clients:elasticsearch-java:7.17.3'
	implementation 'org.elasticsearch.client:elasticsearch-rest-client:7.17.3'
	implementation 'jakarta.json:jakarta.json-api:2.0.1'

	// markdown to text
	implementation 'com.vladsch.flexmark:flexmark-all:0.64.8'
	implementation 'org.jsoup:jsoup:1.16.1'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		// import 순서 정의
		importOrder(
				"java",
				"javax",
				"lombok",
				"org.springframework",
				"",
				"\\#",
				"org.junit",
				"\\#org.junit",
				"com.guide",
				"\\#com.guide"
		)
		// 사용하지 않는 import 제거
		removeUnusedImports()

		// 구글 자바 포맷 적용
		googleJavaFormat()

		// 들여쓰기
		indentWithTabs(2)
		indentWithSpaces(4)

		// 공백 제거
		trimTrailingWhitespace()

		// 끝 부분 new line 처리
		endWithNewline()
	}
}